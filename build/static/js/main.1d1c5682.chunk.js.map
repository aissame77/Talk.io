{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Chats.js","components/Login.js","components/App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","user","setUser","history","useHistory","useEffect","onAuthStateChanged","push","value","Provider","Chats","didMountRef","useRef","useContext","handleLogout","a","signOut","getFile","url","fetch","response","blob","data","File","type","current","axios","get","headers","process","email","uid","then","catch","e","formdata","FormData","append","photoURL","avatar","name","post","console","log","className","onClick","height","projectID","userName","userSecret","Login","id","signInWithRedirect","GoogleAuthProvider","GoogleOutlined","FacebookAuthProvider","FacebookOutlined","App","style","fontFamily","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d1c5682.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nimport 'firebase/auth';\r\n\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCSX7k5l9yH9Oawfha9qYS8qF60BSk4lbw\",\r\n  authDomain: \"talk-io-d7ac4.firebaseapp.com\",\r\n  projectId: \"talk-io-d7ac4\",\r\n  storageBucket: \"talk-io-d7ac4.appspot.com\",\r\n  messagingSenderId: \"232187124454\",\r\n  appId: \"1:232187124454:web:fc3c2950dace9cbc3af927\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst auth=app.auth();\r\nexport {auth}","import React, { useContext, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { auth } from '../firebase'\r\n\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [user, setUser] = useState(null);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((user) => {\r\n            setUser(user);\r\n            setLoading(false);\r\n\r\n            if (user) history.push('/chats');\r\n        })\r\n    }, [user, history]);\r\n\r\n    const value = { user };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React, { useRef, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ChatEngine } from 'react-chat-engine'\r\nimport { auth } from '../firebase'\r\nimport axios from 'axios'\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nconst Chats = () => {\r\n    const didMountRef = useRef(false)\r\n    const history = useHistory()\r\n    const { user } = useAuth();\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const handleLogout = async () => {\r\n        await auth.signOut()\r\n        history.push('/')\r\n    }\r\n\r\n    const getFile = async (url) => {\r\n        let response = await fetch(url);\r\n        let data = await response.blob();\r\n        return new File([data], \"test.jpg\", { type: 'image/jpeg' });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!didMountRef.current) {\r\n            didMountRef.current = true\r\n\r\n            if (!user || user === null) {\r\n                history.push(\"/\")\r\n                return\r\n            }\r\n            axios.get(\r\n                'https://api.chatengine.io/users/me/',\r\n                {\r\n                    headers: {\r\n                        \"project-id\": process.env.REACT_APP_CHAT_ENGINE_ID,\r\n                        \"user-name\": user.email,\r\n                        \"user-secret\": user.uid\r\n                    }\r\n                }\r\n            )\r\n                .then(() => setLoading(false))\r\n                .catch(e => {\r\n                    let formdata = new FormData()\r\n                    formdata.append('email', user.email)\r\n                    formdata.append('username', user.email)\r\n                    formdata.append('secret', user.uid)\r\n\r\n                    getFile(user.photoURL)\r\n                        .then(avatar => {\r\n                            formdata.append('avatar', avatar, avatar.name)\r\n\r\n                            axios.post(\r\n                                'https://api.chatengine.io/users/',\r\n                                formdata,\r\n                                { headers: { \"private-key\": process.env.REACT_APP_CHAT_ENGINE_KEY } }\r\n                            )\r\n                                .then(() => setLoading(false))\r\n                                .catch(e => console.log('e', e.response))\r\n                        })\r\n                })\r\n\r\n        }\r\n    }, [user, history])\r\n\r\n    if (!user || loading) return 'Loading...';\r\n\r\n    return (\r\n        <div className=\"chats-page\">\r\n            <div className=\"nav-bar\">\r\n                <div className=\"logo-tab\">LambChat</div>\r\n                <div className=\"logout-tab\" onClick={handleLogout}>Logout</div>\r\n\r\n            </div>\r\n            <ChatEngine\r\n                height='calc(100vh - 66px)'\r\n                projectID={process.env.REACT_APP_CHAT_ENGINE_ID}\r\n                userName={user.email}\r\n                userSecret={user.uid}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chats\r\n","import React from 'react'\r\nimport { GoogleOutlined, FacebookOutlined } from '@ant-design/icons'\r\nimport firebase from 'firebase/app'\r\n\r\nimport { auth } from '../firebase';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div id=\"login-page\">\r\n            <div id=\"login-card\">\r\n                <h2>Welcome to LambChat!</h2>\r\n                <div\r\n                    className=\"login-button google\"\r\n                    onClick={() => auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider())}\r\n                >\r\n                    <GoogleOutlined /> Sign In With Google\r\n                </div>\r\n                <br /> <br />\r\n                <div\r\n                    className=\"login-button facebook\"\r\n                    onClick={() => auth.signInWithRedirect(new firebase.auth.FacebookAuthProvider())}\r\n                >\r\n                    <FacebookOutlined /> Sign In With Facebook\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\"\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\n\r\nimport { AuthProvider } from \"../contexts/AuthContext\"\r\n\r\nimport Chats from \"./Chats\"\r\nimport Login from \"./Login\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div style={{ fontFamily: 'Avenir' }}>\r\n      <Router>\r\n        <AuthProvider>\r\n          <Switch>\r\n            <Route path=\"/chats\" component={Chats} />\r\n            <Route path=\"/\" component={Login} />\r\n          </Switch>\r\n        </AuthProvider>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}